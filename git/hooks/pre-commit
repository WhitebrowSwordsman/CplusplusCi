#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
  against=HEAD
else
  # Initial commit: diff against an empty tree object
  against=$(git hash-object -t tree /dev/null)
fi

# Redirect output to stderr.
exec 1>&2

bash_dir="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

# check cpplint
cpplint_cmd=${bash_dir}/../../tools/cpplint/dist/cpplint

sum=0
cpplint_filters='-build/include,-whitespace/comments,-whitespace/indent'
for file in $(git diff-index --name-status $against -- | grep -E '\.(h|cc|cpp)$' | awk '{print $2}'); do
  echo ${file}
  ${cpplint_cmd} --linelength=128 --filter="${cpplint_filters}" ${file}
  sum=$(expr ${sum} + $?)
done

if [[ ${sum} -eq 0 ]]; then
  exit 0
else
  exit 1
fi
